name: CI/CD Pipeline

on:
  push:
    branches: 
      - '**'
  pull_request:
    branches:
      - '**'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '20'

    - name: Install dependencies
      run: npm install

    - name: Run unit tests
      run: npm test

  # deploy:
  #   if: github.ref == 'refs/heads/main'
  #   needs: build
  #   runs-on: ubuntu-latest

  #   steps:
  #   - name: Checkout code
  #     uses: actions/checkout@v2

  #   - name: Set up Node.js
  #     uses: actions/setup-node@v2
  #     with:
  #       node-version: '20'

  #   - name: Install dependencies
  #     run: npm install

  #   - name: Build the Docker image
  #     run: docker build -t gcr.io/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.GCP_SERVICE_NAME }}:${{ github.sha }} .

  #   - name: Configure GCloud CLI
  #     uses: google-github-actions/setup-gcloud@v0.2.0
  #     with:
  #       version: 'latest'
  #       service_account_key: ${{ secrets.GCP_SA_KEY }}
  #       project_id: ${{ secrets.GCP_PROJECT_ID }}

  #   - name: Push the Docker image
  #     run: docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.GCP_SERVICE_NAME }}:${{ github.sha }}

  #   - name: Deploy to Cloud Run
  #     run: gcloud run deploy ${{ secrets.GCP_SERVICE_NAME }} \
  #           --image gcr.io/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.GCP_SERVICE_NAME }}:${{ github.sha }} \
  #           --region ${{ secrets.GCP_REGION }} \
  #           --platform managed \
  #           --allow-unauthenticated #\
  #           #--set-env-vars REDIS_HOST=${{ secrets.REDIS_HOST }},REDIS_PORT=${{ secrets.REDIS_PORT }}

  #   - name: Set up Redis connection
  #     run: |
  #       gcloud compute firewall-rules create allow-redis \
  #         --allow tcp:6379 \
  #         --source-ranges 0.0.0.0/0 \
  #         --target-tags redis
